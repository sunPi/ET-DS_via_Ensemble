setwd("E:/PhD/Experiments-Results/Bioinformatics/Cell lines/PARP_sensitivity_genomics/Primary cell lines/Boruta algorythm - Aleks/FINAL FOR THESIS/Rucaparib response Boruta/Responders vs NonResponders")
library(Boruta)
library(ranger)
library(tidyverse)
# Upload cell line data from your working directory
AB.data <- read.csv("AB CNV cells - Responders vs Nonresponders.csv")
# Execute Boruta algorithm, focusing on response (to rucaparib)
AB.RucClono.Boruta <- Boruta(response~.,AB.data, maxRun =500,pValue=0.005)
# Install and load Boruta with dependency 'Ranger' and tidyverse package
install.packages('Boruta')
install.packages("Boruta")
install.packages('ranger')
install.packages('tidyverse')
# Execute Boruta algorithm, focusing on response (to rucaparib)
AB.RucClono.Boruta <- Boruta(response~.,AB.data, maxRun =500,pValue=0.005)
# Upload cell line data from your working directory
AB.data <- read.csv("AB CNV cells - Responders vs Nonresponders.csv")
# Execute Boruta algorithm, focusing on response (to rucaparib)
AB.RucClono.Boruta <- Boruta(response~.,AB.data, maxRun =500,pValue=0.005)
library(Boruta)
library(ranger)
library(tidyverse)
# Execute Boruta algorithm, focusing on response (to rucaparib)
AB.RucClono.Boruta <- Boruta(response~.,AB.data, maxRun =500,pValue=0.005)
# View basic results
print(AB.RucClono.Boruta)
# Execute Boruta algorithm, focusing on response (to rucaparib)
AB.RucClono.Boruta <- Boruta(response~.,AB.data, maxRun =500,pValue=0.005)
(AB.RucClono.Boruta)
# Execute Boruta algorithm, focusing on response (to rucaparib)
AB.RucClono.Boruta <- Boruta(response~.,AB.data, maxRun =500,pValue=0.005)
rm(list = ls())
setwd("E:/PhD/Experiments-Results/Bioinformatics/Cell lines/PARP_sensitivity_genomics/Primary cell lines/Boruta algorythm - Aleks/FINAL FOR THESIS/Rucaparib response Boruta/Responders vs NonResponders")
# Install and load Boruta with dependency 'Ranger' and tidyverse package
install.packages('Boruta')
install.packages("Boruta")
install.packages('ranger')
install.packages('tidyverse')
library(Boruta)
library(ranger)
library(tidyverse)
# Upload cell line data from your working directory
AB.data <- read.csv("AB CNV cells - Responders vs Nonresponders.csv")
# Execute Boruta algorithm, focusing on response (to rucaparib)
AB.RucClono.Boruta <- Boruta(response~.,AB.data, maxRun =100,pValue=0.005)
# View basic results
print(AB.RucClono.Boruta)
# Execute Boruta algorithm, focusing on response (to rucaparib)
AB.RucClono.Boruta <- Boruta(response~.,AB.data, maxRun =500,pValue=0.005)
# View basic results
print(AB.RucClono.Boruta)
# Execute Boruta algorithm, focusing on response (to rucaparib)
AB.RucClono.Boruta <- Boruta(response~.,AB.data, maxRun =500,pValue=0.05)
# View basic results
print(AB.RucClono.Boruta)
#### Repeat Boruta execution up to 5,000 iterations with aooropriate p value e.g.p=0.005
successes <- 0
attempts <- 0
Boruta5k <- repeat{
repeat{
attempts <- attempts + 1
results <- Boruta(response ~., AB.data, maxRuns=500, pvalue=0.05)
duration <- as.numeric(results$timeTaken, units='secs')
print(paste0('Attempt ', attempts, ' lasted ', duration, ' seconds.'))
if (duration > 1){
print("Sufficient iterations reached");
successes <- successes + 1
imps.stats <- attStats(results) %>% filter(decision=='Confirmed') %>%
mutate('Execution'=successes)
imps.stats <- imps.stats %>% mutate('Variable'=rownames(imps.stats))
print(getSelectedAttributes(results))
print(results)
break
}
}
ifelse(successes==1, collated <- imps.stats, collated <- bind_rows(collated, imps.stats))
if (successes>=10) {;
break
}
}
rm(list = ls())
setwd("E:/PhD/Experiments-Results/Bioinformatics/Cell lines/PARP_sensitivity_genomics/Primary cell lines/Boruta algorythm - Aleks/FINAL FOR THESIS/Rucaparib response Boruta/Responders vs NonResponders")
library(Boruta)
library(ranger)
library(tidyverse)
# Upload cell line data from your working directory
AB.data <- read.csv("AB CNV cells - Responders vs Nonresponders.csv")
# Execute Boruta algorithm, focusing on response (to rucaparib)
AB.RucClono.Boruta <- Boruta(response~.,AB.data, maxRun =500,pValue=0.05)
# View basic results
print(AB.RucClono.Boruta)
#### Repeat Boruta execution up to 5,000 iterations with aooropriate p value e.g.p=0.005
successes <- 0
attempts <- 0
Boruta5k <- repeat{
repeat{
attempts <- attempts + 1
results <- Boruta(response ~., AB.data, maxRuns=500, pvalue=0.05)
duration <- as.numeric(results$timeTaken, units='secs')
print(paste0('Attempt ', attempts, ' lasted ', duration, ' seconds.'))
if (duration > 3){
print("Sufficient iterations reached");
successes <- successes + 1
imps.stats <- attStats(results) %>% filter(decision=='Confirmed') %>%
mutate('Execution'=successes)
imps.stats <- imps.stats %>% mutate('Variable'=rownames(imps.stats))
print(getSelectedAttributes(results))
print(results)
break
}
}
ifelse(successes==1, collated <- imps.stats, collated <- bind_rows(collated, imps.stats))
if (successes>=10) {;
break
}
}
# Execute Boruta algorithm, focusing on response (to rucaparib)
AB.RucClono.Boruta <- Boruta(response~.,AB.data, maxRun =500,pValue=0.05)
rm(list = ls())
setwd("E:/PhD/Experiments-Results/Bioinformatics/Cell lines/PARP_sensitivity_genomics/Primary cell lines/Boruta algorythm - Aleks/FINAL FOR THESIS/Rucaparib response Boruta/Responders vs NonResponders")
library(Boruta)
library(ranger)
library(tidyverse)
# Upload cell line data from your working directory
AB.data <- read.csv("AB CNV cells - Responders vs Nonrespondrs.csv")
# Upload cell line data from your working directory
AB.data <- read.csv("AB CNV cells - Responders vs Nonresponders.csv")
# Execute Boruta algorithm, focusing on response (to rucaparib)
AB.RucClono.Boruta <- Boruta(response~.,AB.data, maxRun =500,pValue=0.001)
# View basic results
print(AB.RucClono.Boruta)
#### Repeat Boruta execution up to 5,000 iterations with aooropriate p value e.g.p=0.005
successes <- 0
attempts <- 0
Boruta5k <- repeat{
repeat{
attempts <- attempts + 1
results <- Boruta(response ~., AB.data, maxRuns=100, pvalue=0.005)
duration <- as.numeric(results$timeTaken, units='secs')
print(paste0('Attempt ', attempts, ' lasted ', duration, ' seconds.'))
if (duration > 0.3){
print("Sufficient iterations reached");
successes <- successes + 1
imps.stats <- attStats(results) %>% filter(decision=='Confirmed') %>%
mutate('Execution'=successes)
imps.stats <- imps.stats %>% mutate('Variable'=rownames(imps.stats))
print(getSelectedAttributes(results))
print(results)
break
}
}
ifelse(successes==1, collated <- imps.stats, collated <- bind_rows(collated, imps.stats))
if (successes>=10) {;
break
}
}
#### Repeat Boruta execution up to 5,000 iterations with aooropriate p value e.g.p=0.005
successes <- 0
attempts <- 0
Boruta5k <- repeat{
repeat{
attempts <- attempts + 1
results <- Boruta(response ~., AB.data, maxRuns=100, pvalue=0.005)
duration <- as.numeric(results$timeTaken, units='secs')
print(paste0('Attempt ', attempts, ' lasted ', duration, ' seconds.'))
if (duration > 1){
print("Sufficient iterations reached");
successes <- successes + 1
imps.stats <- attStats(results) %>% filter(decision=='Confirmed') %>%
mutate('Execution'=successes)
imps.stats <- imps.stats %>% mutate('Variable'=rownames(imps.stats))
print(getSelectedAttributes(results))
print(results)
break
}
}
ifelse(successes==1, collated <- imps.stats, collated <- bind_rows(collated, imps.stats))
if (successes>=10) {;
break
}
}
